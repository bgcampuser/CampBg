@using System.Collections
@using CampBg.Web.Areas.Administration.ViewModels

@model ProductViewModel

<div class="form-group">
    @Html.HiddenFor(x => x.Id)

    <div class="editor-label">
        @Html.LabelFor(x => x.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.Name)
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.Description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.Description)
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.NameEn)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.NameEn)
        @Html.ValidationMessageFor(x => x.NameEn)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.DescriptionEn)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.DescriptionEn)
        @Html.ValidationMessageFor(x => x.DescriptionEn)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.Price)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.Price)
        @Html.ValidationMessageFor(x => x.Price)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.ManufacturerId)
    </div>
    <div class="editor-field">
        @(Html.Kendo()
              .ComboBox()
              .Value("Manufacturer")
              .Name("ManufacturerId")
              .DataValueField("Id")
              .DataTextField("Name")
              .Placeholder("Select Manufacturer...")
              .Filter(FilterType.Contains)
              .BindTo((IEnumerable)ViewBag.Manufacturers)
              .HtmlAttributes(new { style = "width:85%;" })
        )
              
        @Html.ValidationMessageFor(x => x.ManufacturerId)
    </div>
    

    <div class="editor-label">
        @Html.LabelFor(x => x.ManufacturerIdentificationNumber)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.ManufacturerIdentificationNumber)
        @Html.ValidationMessageFor(x => x.ManufacturerIdentificationNumber)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(x => x.IsPopular)
    </div>
    <div class="editor-field">
        @Html.EditorFor(x => x.IsPopular)
        @Html.ValidationMessageFor(x => x.IsPopular)
    </div>

    <div class="editor-label">
       @Html.LabelFor(x => x.CategoryId)
    </div>

    <div class="editor-field">
        @(Html.Kendo()
                .ComboBox()
                .Value("Category")
                .Name("CategoryId")
                .DataValueField("Id")
                .DataTextField("Name")
                .Placeholder("Select Category...")
                .Filter(FilterType.Contains)
                .BindTo((IEnumerable)ViewBag.Categories)
                .HtmlAttributes(new { style = "width:85%;" })
        )
        @Html.ValidationMessageFor(x => x.CategoryId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(x => x.SubcategoryId)
    </div>

    <div class="editor-field">
        @(Html.Kendo()
                .ComboBox()
                .Value("Subcategory")
                .Name("SubcategoryId")
                .DataValueField("Id")
                .DataTextField("Name")
                .Placeholder("Select Subcategory...")
                .Filter(FilterType.Contains)
                .BindTo((IEnumerable)ViewBag.Subcategories)
                .HtmlAttributes(new { style = "width:85%;" })
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetSubcategories", "Products")
                            .Data
                            (
                                @<text>
                                        function () {
                                            return {
                                                categoryId: $("#CategoryId").val()
                                            };
                                        }
                                </text>
                            );
                    })
                    .ServerFiltering(true);
                    
                })
                .Enable(false)
                .AutoBind(false)
                .CascadeFrom("CategoryId"))
      
        @Html.ValidationMessageFor(x => x.SubcategoryId)
    </div>

  
    <script>
        function subcategoryOptionValidation(e) {

            if (e.response.length > 0) {
                $('.subcategory-option-label').show();
                $('input[name=SubcategoryOptionId_input]').closest('.editor-field').show();
                $('input[name=SubcategoryOptionId_input]').attr('data-val-required', 'This field is required.');
            }
            else {
                $('.subcategory-option-label').hide();
                $('input[name=SubcategoryOptionId_input]').closest('.editor-field').hide();
                $('input[name=SubcategoryOptionId_input]').removeAttr('data-val-required');
            }

        }
    </script>

    <div class="editor-label">
        @Html.LabelFor(x => x.SubcategoryOptionId, new { @class= "subcategory-option-label" })
    </div>
    <div class="editor-field">
        @(Html.Kendo()
                .ComboBox()
                .Placeholder("Select Subcategory Option...")
                .Value("SubcategoryOption")
                .Name("SubcategoryOptionId")
                .DataValueField("Id")
                .DataTextField("Name")
                .Filter(FilterType.Contains)
                .BindTo((IEnumerable)ViewBag.SubcategoryOptions)
                .HtmlAttributes(new { style = "width:85%;", data_value_primitive="true" })
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetSubcategoryOptions", "Products")
                            .Data
                            (
                                @<text>
                                        function () {
                                            return {
                                                subcategoryId: $("#SubcategoryId").val()
                                            };
                                        }
                                </text>
                            );
                    })
                    .ServerFiltering(true)
                    .Events(e => e.RequestEnd("subcategoryOptionValidation"));
                })
                .Enable(false)
                .AutoBind(false)
                .CascadeFrom("SubcategoryId")
        )
        @Html.ValidationMessageFor(x => x.SubcategoryOptionId)
    </div>
</div>

